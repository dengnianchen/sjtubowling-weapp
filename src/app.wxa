<template>
	<view>
		<layout-loading wx:if="{{loading}}"></layout-loading>
		<layout-error wx:if="{{loadingError}}" error="{{loadingError}}" bindclick="reloadPage"></layout-error>
		<page></page>
	</view>
</template>

<script>
	require ('welib');
	require ('./error');
	const style = require('./style');
	const config = require('./config');
	const User = require('./models/user');
	
	export default {
		config: {
			usingComponents: {
				'layout-loading': 'layout/loading',
				'layout-error': 'layout/error',
			},
			pages: [],
			window: {
				backgroundTextStyle: 'dark',
				backgroundColor: '#efefef',
				navigationBarBackgroundColor: '#ffffff',
				navigationBarTitleText: '交大保龄 - 员工之家',
				navigationBarTextStyle: 'black',
			},
			networkTimeout: {
				request: 10000,
			},
			tabBar: {
				color: '#999999',
				selectedColor: '#00B26A',
				list: [
					{
						pagePath: 'pages/home/index',
						text: '首页',
						iconPath: '/images/home.png',
						selectedIconPath: '/images/home-active.png'
					}, {
						pagePath: 'pages/family/index',
						text: '全家福',
						iconPath: '/images/family.png',
						selectedIconPath: '/images/family-active.png'
					}, {
						pagePath: 'pages/my/index',
						text: '个人中心',
						iconPath: '/images/user.png',
						selectedIconPath: '/images/user-active.png'
					}],
			},
		},
		globalData: {
			config,
			style
		},
		async beforePageLoad(page) {
			let redirectToBind = () => wx.redirectTo({
				url: `../bind/index?from=${page.getPath()}`,
			});
			let redirectToFillInfo = () => wx.redirectTo({
				url: `../newGuide/index?from=${page.getPath()}`,
			});
			
			// 1. 若当前不存在全局配置信息，则先加载之
			//    全局配置信息存在app对象中，因此仅在小程序运行后的第一个页面加载时需要从服务器获取
			if ($($.AppData.config).isEmpty())
				$($.AppData.config).extend(await $.Http.request("/common/config"));
			
			// 2. 尝试获取当前登陆用户
			let user = User.current;
			
			// 3. 尝试登陆并获取绑定的网站用户信息
			//    前提条件：当前页面需要登录才能访问，且当前用户不存在
			//    若登陆失败或当前微信账号没有绑定网站账号，则跳转到登陆绑定页面
			if (this.auth && !user) {
				try {
					await $.Http.login();
				} catch (ex) {
					return redirectToBind();
				}
				user = User.current;
				if (!user)
					return redirectToBind();
			}
			this.setData({ suser: user });
			
			// 4. 检查当前登陆用户的用户信息是否已完善，若未完善则跳转到新用户指导页面
			//    前提条件：当前用户存在，且不在用户信息完善的过程中
			if (user && !$.AppData.work && this.route !== "pages/newGuide/index") {
				const completion = user.checkInfoCompletion();
				for (let c of completion) {
					if (!c)
						return redirectToFillInfo();
				}
			}
		},
		onLaunch() {
			// 初始化Welib库
			$.initial(this);
		},
		onShow() {
		},
		onHide() {
		},
	};
</script>

<style lang="less">
	@import "style";
	@import "common/style/app-panel.wxss";
	@import 'vendor/font-awsome/fa.wxss';
	@import 'common/style/fake-button.wxss';
	
	page {
		background-color: @backgroundColor;
		height: 100%;
		font-size: @fontSize__text;
		line-height: 1.5;
		font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
	}
	.page__hd {
		padding: 80px;
	}
	.page__bd {
		padding-bottom: 80px;
	}
	.page__bd_spacing {
		padding-left: 30px;
		padding-right: 30px;
	}
	
	.page__ft{
		padding-bottom: 20px;
		text-align: center;
	}
	
	.page__title {
		text-align: left;
		font-size: @fontSize__title;
		font-weight: 400;
		color: @mainHeadingColor;
	}
	
	.page__desc {
		margin-top: 10px;
		font-size: @fontSize__desc;
		color: @subHeadingColor;
		text-align: left;
	}
	
	.large-btn-wrapper {
		padding: 0 30px 0 30px;
		margin: 30px 0;
	}
	
</style>
